@startuml DiagramaReactor

enum EstadoReactor {
  APAGADO
  NORMALIDAD
  CRITICIDAD
  CRITICA
}

abstract class CombustibleNuclear {
  - cantidadEnToneladas: double
 
  + recargar(double): void
  + {abstract} consumir(double): void
  + tieneCombustible(): boolean
}

class Uranio extends CombustibleNuclear {
  + consumir(double): void
}

abstract class SistemasDeRegulacionTermica{
    - estado:boolean;
    + encenderSistema():void;
    + apagarSistema():void;
    + getEstado():boolean;
    + controlarTemperatura(temperatura:number):void;
}

class BarraDeControl extends SistemasDeRegulacionTermica{
    - vidaUtil:number;
    + getVidaUtil():number;
    + setVidaUtil(TiempovidaUtil:number):void;
    + controlarTemperatura(temperatura:number):void;
    + getPorcentajeProduccion():number;
}

class SensorTermico {
  + medir(double): void
}

class Reactor {
  - combustible: CombustibleNuclear
  - sensorTermico: SensorTermico
  - sistemasDeRegulacionTermica : SistemasDeRegulacionTermica
  - estado: EstadoReactor
  - modoEnfriamiento: boolean
  - puedeGenerarEnergiaTermica: boolean
  - eficiencia: double
  - consumoCombustiblePorSegundo: double
  - energiaTermicaPorSegundo: double

  + iniciar(): void
  + mantener(): void
  + detener(): void
  - generarEnergiaTermica(temperatura:number):number
  - enfriar(): void
}

Reactor *-r- CombustibleNuclear
Reactor *-- SensorTermico
Reactor *-l- SistemasDeRegulacionTermica

@enduml